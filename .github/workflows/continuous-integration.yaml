name: 'Continuous integration'
on: ['push', 'pull_request']
jobs:
  cs:
    runs-on: 'ubuntu-latest'
    name: 'Coding style'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v2'

      - name: 'Setup PHP'
        uses: 'shivammathur/setup-php@v2'
        with:
          php-version: '7.4'
          coverage: 'none'
          extensions: 'json, mbstring, tokenizer'
          tools: 'composer-normalize, php-cs-fixer:3.10.0'
        env:
          update: true

      - name: 'Display tools versions'
        run: |
          composer-normalize --version
          php-cs-fixer --version

      - name: 'Check PHP code'
        run: 'php-cs-fixer fix --diff --dry-run --using-cache=no --config=.php-cs-fixer.dist-php'

      - name: 'Check composer.json'
        run: 'composer-normalize --diff --dry-run --no-update-lock'

  code-quality:
    runs-on: 'ubuntu-latest'
    name: 'Code Quality'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v2'

      - name: 'Setup PHP'
        uses: 'shivammathur/setup-php@v2'
        with:
          php-version: '7.4'
          coverage: 'none'
          extensions: 'json, mbstring, tokenizer'
        env:
          update: true

      - uses: 'ramsey/composer-install@v2'

      - name: 'Display tools versions'
        run: 'vendor/bin/phpstan --version'

      - name: 'Run PHPStan'
        run: 'vendor/bin/phpstan analyse --configuration phpstan.neon'

  unit-tests:
    runs-on: 'ubuntu-latest'
    name: 'Unit Tests'
    strategy:
      matrix:
        php:
          - '7.4'
          - '8.0'
          - '8.1'
        dependencies:
          - 'lowest'
          - 'highest'
          - 'beta'
        include:
          - dependencies: 'beta'
        symfony_version:
          - 5.1
          - 5.2
          - 5.3
          - 5.4
          - 6.0
    env:
      SYMFONY_VERSION: '${{ matrix.symfony_version }}'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v2'

      - name: 'Setup PHP'
        uses: 'shivammathur/setup-php@v2'
        with:
          php-version: '${{ matrix.php }}'
          coverage: 'none'
          tools: 'composer:2'
          extensions: 'mongodb'
        env:
          update: true

      - run: 'make composer-compat'

      - run: |
          if [ "${{ matrix.dependencies }}" = "beta" ]; then make composer-config-beta; fi;

      - run: 'composer rem symfony/form -n --no-update && composer req "symfony/form: ^4.4 || ^5.1" doctrine/annotations --no-update -n'

      - uses: 'ramsey/composer-install@v2'
        with:
          dependency-versions: '${{ matrix.dependencies }}'
          composer-options: '${{ matrix.composer-options }}'

      - run: 'make phpunit-coverage'
